name: build_master_images
on:
  schedule:
    - cron: '30 2 * * * '
  push:
    branches:
    - main

permissions: {}

env:
  REGISTRY_USER: ${{ github.actor }}
  REGISTRY_PASSWORD: ${{ github.token }}
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}

jobs:
  build_master:
    name: ${{ matrix.build.name }}
    runs-on: 'ubuntu-latest'
    permissions:
      packages: write  # To create/update container on ghcr.io
    strategy:
      fail-fast: false
      matrix:
        install_latest: [ true ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          ref: "main"
      - name: Log in to ghcr.io
        uses: redhat-actions/podman-login@4934294ad0449894bcd1e9f191899d7292469603 # v1.7
        with:
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}
          registry: ${{ env.IMAGE_REGISTRY }}
      - name: "login docker hub"
        env:
          DOCKER_HUB_USER: '${{secrets.DOCKER_HUB_USER}}'
          DOCKER_HUB_TOKEN: '${{secrets.DOCKER_HUB_TOKEN}}'
        run: |
          podman login -u "${DOCKER_HUB_USER}" -p "${DOCKER_HUB_TOKEN}" docker.io
          docker login -u "${DOCKER_HUB_USER}" -p "${DOCKER_HUB_TOKEN}"
      - name: "login quay.io"
        env:
          QUAY_USER: '${{secrets.QUAY_USER}}'
          QUAY_TOKEN: '${{secrets.QUAY_TOKEN}}'
        run: |
          podman login -u "${QUAY_USER}" -p "${QUAY_TOKEN}" quay.io
          docker login -u "${QUAY_USER}" -p "${QUAY_TOKEN}" quay.io
      - run: |
          sudo apt-get update
          sudo apt-get -y install qemu-user-static buildah less git make podman clamav clamav-freshclam
        name: 'install dev deps'
      - run: buildah unshare make branch_or_ref=master release_tag=master build_ref_images
        name: 'build master images'
      - run: buildah unshare make dist_name=localhost/curl release_tag=master test
        name: 'test image'
      - run: make image_name=localhost/curl:master scan
        name: 'security scan image'
      - run: |
          buildah push curl-dev:master "docker://ghcr.io/curl/curl-container/curl-dev:master"
          buildah push curl-base:master "docker://ghcr.io/curl/curl-container/curl-base:master"
          buildah push curl:master "docker://ghcr.io/curl/curl-container/curl:master"
        name: 'push images to github registry'
      - name: Install Cosign
        uses: sigstore/cosign-installer@d7543c93d881b35a8faa02e8e3605f69b7a1ce62 # v3.10.0
      - name: Write signing key to disk (only needed for `cosign sign --key`)
        env:
          COSIGN_PRIVATE_KEY: '${{ secrets.COSIGN_PRIVATE_KEY }}'
        run: echo "${COSIGN_PRIVATE_KEY}" > cosign.key
      - name: Sign image with a key
        run: |
          cosign sign -y --key cosign.key ghcr.io/curl/curl-container/curl-dev:master
          cosign sign -y --key cosign.key ghcr.io/curl/curl-container/curl-base:master
          cosign sign -y --key cosign.key ghcr.io/curl/curl-container/curl:master
        env:
          COSIGN_PASSWORD: ${{secrets.COSIGN_PASSWORD}}
      - name: Write public key to disk
        env:
          COSIGN_PUBLIC_KEY: '${{ secrets.COSIGN_PUBLIC_KEY }}'
        run: echo "${COSIGN_PUBLIC_KEY}" > cosign.pub
      - name: Verify image with public key
        run: |
          cosign verify --key cosign.pub ghcr.io/curl/curl-container/curl-dev:master
          cosign verify --key cosign.pub ghcr.io/curl/curl-container/curl-base:master
          cosign verify --key cosign.pub ghcr.io/curl/curl-container/curl:master
