name: build_latest_release_multi_images

'on':
  push:
    tags:
      - '*'

concurrency:
  group: ${{ github.workflow }}-${{ github.sha }}
  cancel-in-progress: true

permissions: {}

jobs:
  build_multi_latest_release_tag:
    name: ${{ matrix.build.name }}
    runs-on: 'ubuntu-latest'
    permissions:
      packages: write  # To create/update container on ghcr.io
    strategy:
      fail-fast: false
      matrix:
        install_latest: [true]
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          tag_name: ${{ github.ref }}
      - name: 'login ghcr.io'
        uses: redhat-actions/podman-login@4934294ad0449894bcd1e9f191899d7292469603 # v1.7
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io/${{ github.repository_owner }}
      - name: 'login docker hub'
        env:
          DOCKER_HUB_USER: '${{ secrets.DOCKER_HUB_USER }}'
          DOCKER_HUB_TOKEN: '${{ secrets.DOCKER_HUB_TOKEN }}'
        run: |
          echo "${DOCKER_HUB_TOKEN}" | podman login -u "${DOCKER_HUB_USER}" --password-stdin docker.io
          echo "${DOCKER_HUB_TOKEN}" | docker login -u "${DOCKER_HUB_USER}" --password-stdin
      - name: 'login quay.io'
        env:
          QUAY_USER: '${{ secrets.QUAY_USER }}'
          QUAY_TOKEN: '${{ secrets.QUAY_TOKEN }}'
        run: |
          echo "${QUAY_TOKEN}" | podman login -u "${QUAY_USER}" --password-stdin quay.io
          echo "${QUAY_TOKEN}" | docker login -u "${QUAY_USER}" --password-stdin quay.io
      - name: 'install dev deps'
        run: |
          sudo apt-get update
          sudo apt-get -y install qemu-user-static buildah less git make podman clamav clamav-freshclam
      - name: 'sets env vars'
        run: |
          release_tag_redirect=$(curl -s https://github.com/curl/curl/releases/latest -w'%{redirect_url}\n' -o /dev/null)
          latest_release_ref=$(basename ${release_tag_redirect})
          echo "TAG_REF=$latest_release_ref" >> $GITHUB_ENV
          rel=${latest_release_ref:5}
          release_image_tag="${rel//_/.}"
          echo "REL=$release_image_tag" >> $GITHUB_ENV
      - name: 'build multi image'
        run: buildah unshare make branch_or_ref=$TAG_REF release_tag=$REL multibuild
      - name: 'test image'
        run: buildah unshare make dist_name=localhost/curl-multi release_tag=$REL test
      - name: 'install scan prereqs'
        run: /home/linuxbrew/.linuxbrew/bin/brew install grype trivy
      - name: 'security scan image'
        run: |
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          make image_name=localhost/curl-multi:${REL} scan
      - name: 'push images to github registry'
        run: |
          buildah manifest push --format v2s2 --all curl-multi:$REL "docker://ghcr.io/curl/curl-container/curl-multi:${REL}"
          buildah manifest push --format v2s2 --all curl-base-multi:$REL "docker://ghcr.io/curl/curl-container/curl-base-multi:${REL}"
      - name: 'install Cosign'
        uses: sigstore/cosign-installer@d7543c93d881b35a8faa02e8e3605f69b7a1ce62 # v3.10.0
      - name: 'write signing key to disk (only needed for `cosign sign --key`)'
        env:
          COSIGN_PRIVATE_KEY: '${{ secrets.COSIGN_PRIVATE_KEY }}'
        run: echo "${COSIGN_PRIVATE_KEY}" > cosign.key
      - name: 'sign images with sigstore key'
        run: |
          cosign sign -y --key cosign.key ghcr.io/curl/curl-container/curl-multi:$REL
          cosign sign -y --key cosign.key ghcr.io/curl/curl-container/curl-base-multi:$REL
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
      - name: 'verify image with public key'
        run: |
          cosign verify --key cosign.pub ghcr.io/curl/curl-container/curl-multi:$REL
          cosign verify --key cosign.pub ghcr.io/curl/curl-container/curl-base-multi:$REL
      - name: 'push release to docker hub'
        run: |
          buildah manifest push --format v2s2 --all localhost/curl-multi:$REL "docker://docker.io/curlimages/curl:${REL}"
          buildah manifest push --format v2s2 --all localhost/curl-multi:$REL "docker://docker.io/curlimages/curl:latest"
          buildah manifest push --format v2s2 --all localhost/curl-base-multi:$REL "docker://docker.io/curlimages/curl-base:${REL}"
          buildah manifest push --format v2s2 --all localhost/curl-base-multi:$REL "docker://docker.io/curlimages/curl-base:latest"
      - name: 'sign images with a sigstore key'
        run: |
          cosign sign -y --key cosign.key docker.io/curlimages/curl:$REL
          cosign sign -y --key cosign.key docker.io/curlimages/curl:latest
          cosign sign -y --key cosign.key docker.io/curlimages/curl-base:$REL
          cosign sign -y --key cosign.key docker.io/curlimages/curl-base:latest
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
      - name: 'verify image with public key'
        run: |
          cosign verify --key cosign.pub docker.io/curlimages/curl:$REL
          cosign verify --key cosign.pub docker.io/curlimages/curl:latest
          cosign verify --key cosign.pub docker.io/curlimages/curl-base:$REL
          cosign verify --key cosign.pub docker.io/curlimages/curl-base:latest
      - name: 'push release to quay.io'
        run: |
          buildah manifest push --format v2s2 --all localhost/curl-multi:$REL "docker://quay.io/curl/curl:${REL}"
          buildah manifest push --format v2s2 --all localhost/curl-multi:$REL "docker://quay.io/curl/curl:latest"
          buildah manifest push --format v2s2 --all localhost/curl-base-multi:$REL "docker://quay.io/curl/curl-base:${REL}"
          buildah manifest push --format v2s2 --all localhost/curl-base-multi:$REL "docker://quay.io/curl/curl-base:latest"
      - name: 'sign images with a sigstore key'
        run: |
          cosign sign -y --key cosign.key quay.io/curl/curl:$REL
          cosign sign -y --key cosign.key quay.io/curl/curl:latest
          cosign sign -y --key cosign.key quay.io/curl/curl-base:$REL
          cosign sign -y --key cosign.key quay.io/curl/curl-base:latest
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
      - name: 'verify image with public key'
        run: |
          cosign verify --key cosign.pub quay.io/curl/curl:$REL
          cosign verify --key cosign.pub quay.io/curl/curl:latest
          cosign verify --key cosign.pub quay.io/curl/curl-base:$REL
          cosign verify --key cosign.pub quay.io/curl/curl-base:latest
